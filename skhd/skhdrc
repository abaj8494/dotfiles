#SKHD STUFF

# keycodes @ skhd --observe in terminal.
# 0x21 is the "[" key

# bajaj
## moonlander function mappings
shift - f16 : yabai -m space --rotate 90
shift - f1 : yabai -m window --focus west
shift - f2 : yabai -m window --focus east
shift - f3 : yabai -m window --focus north
shift - f4 : yabai -m window --focus south

shift - f5 : yabai -m window --swap west
shift - f6 : yabai -m window --swap east
shift - f7 : yabai -m window --swap north
shift - f8 : yabai -m window --swap south

shift - f10 : yabai -m query --displays --display | jq -r '.index' | xargs -I {} bash -c "if [[ '{}' = '3' ]]; then yabai -m display --focus 2; elif [[ '{}' = '2' ]]; then yabai -m display --focus 1; elif [[ '{}' = '1' ]]; then yabai -m display --focus 3; fi"
shift - f9 : yabai -m query --displays --display | jq -r '.index' | xargs -I {} bash -c "if [[ '{}' = '3' ]]; then yabai -m display --focus 1; elif [[ '{}' = '2' ]]; then yabai -m display --focus 3; elif [[ '{}' = '1' ]]; then yabai -m display --focus 2; fi"
shift - f12 : windowID="$(yabai -m query --windows --window | jq -re ".id")" && yabai -m query --spaces --space | jq -re ".index" | xargs -I {} bash -c "if [[ '{}' = '1' ]]; then yabai -m window --space 3; elif [[ '{}' = '2' ]]; then yabai -m window --space 1; elif [[ '{}' = '3' ]]; then yabai -m window --space 2; fi" && yabai -m window --focus "$windowID"
shift - f11 : windowID="$(yabai -m query --windows --window | jq -re ".id")" && yabai -m query --spaces --space | jq -re ".index" | xargs -I {} bash -c "if [[ '{}' = '1' ]]; then yabai -m window --space 2; elif [[ '{}' = '2' ]]; then yabai -m window --space 3; elif [[ '{}' = '3' ]]; then yabai -m window --space 1; fi" && yabai -m window --focus "$windowID"

# shift - f14 : yabai -m query --windows --window | jq -re "." | xargs -I{} yabai -m window 2 --stack {}
shift - f13 : window=$(yabai -m query --windows --window | jq -r '.id') && yabai -m window east --stack $window || (yabai -m window $window --toggle float && yabai -m window $window --toggle float)
f9 : yabai -m window --focus stack.prev 
f10 : yabai -m window --focus stack.next 

#shift + alt - a : yabai -m window --resize left:-20:0
#shift + alt - s : yabai -m window --resize bottom:0:20
#shift + alt - w : yabai -m window --resize top:0:-20
#shift + alt - d : yabai -m window --resize right:20:0
## decrease window size
#shift + cmd - a : yabai -m window --resize left:20:0
#shift + cmd - s : yabai -m window --resize bottom:0:-20
#shift + cmd - w : yabai -m window --resize top:0:20
#shift + cmd - d : yabai -m window --resize right:-20:0
#
#

## bindings for abel
# navigate around windowns
ctrl - m : yabai -m window --focus west
ctrl - w : yabai -m window --focus east
ctrl - z : yabai -m window --focus north
ctrl - v : yabai -m window --focus south

# swap windows
cmd + ctrl - m : yabai -m window --swap west
cmd + ctrl - w : yabai -m window --swap east
cmd + ctrl - z : yabai -m window --swap north
cmd + ctrl - v : yabai -m window --swap south

# alternate between monitors

# ctrl - b : yabai -m query --displays --display | jq -r '.index' | xargs -I {} bash -c "if [[ '{}' = '3' ]]; then yabai -m display --focus 2; elif [[ '{}' = '2' ]]; then yabai -m display --focus 1; elif [[ '{}' = '1' ]]; then yabai -m display --focus 3; fi"

# ctrl - x : yabai -m query --displays --display | jq -r '.index' | xargs -I {} bash -c "if [[ '{}' = '3' ]]; then yabai -m display --focus 1; elif [[ '{}' = '2' ]]; then yabai -m display --focus 3; elif [[ '{}' = '1' ]]; then yabai -m display --focus 2; fi"

# move window to other display
ctrl + cmd - b : windowID="$(yabai -m query --windows --window | jq -re ".id")" && yabai -m query --spaces --space | jq -re ".index" | xargs -I {} bash -c "if [[ '{}' = '1' ]]; then yabai -m window --space 3; elif [[ '{}' = '2' ]]; then yabai -m window --space 1; elif [[ '{}' = '3' ]]; then yabai -m window --space 2; fi" && yabai -m window --focus "$windowID"

ctrl + cmd - x : windowID="$(yabai -m query --windows --window | jq -re ".id")" && yabai -m query --spaces --space | jq -re ".index" | xargs -I {} bash -c "if [[ '{}' = '1' ]]; then yabai -m window --space 2; elif [[ '{}' = '2' ]]; then yabai -m window --space 3; elif [[ '{}' = '3' ]]; then yabai -m window --space 1; fi" && yabai -m window --focus "$windowID"


# blacklist
.load "partial_skhdrc"

# Quickly restart the yabai launch agent
ctrl + alt + cmd - r : launchctl kickstart -k "gui/${UID}/homebrew.mxcl.yabai"

# rotate tree 90
ctrl + cmd - 0x31 : yabai -m space --rotate 90


# stacks
# create a stack with all windows on a space (?)
ctrl - p : yabai -m query --windows --window | jq -re "." | xargs -I{} yabai -m window 2 --stack {}
# stack next window onto current window
ctrl - i : window=$(yabai -m query --windows --window | jq -r '.id') && yabai -m window east --stack $window || (yabai -m window $window --toggle float && yabai -m window $window --toggle float)

# focus on next in stack (default functionality)
ctrl - l : yabai -m window --focus stack.next 
# focus on previous in stack
ctrl - r : yabai -m window --focus stack.prev 

# third party python script
#ctrl - l : yabai-stack-navigator --next
#ctrl - r : yabai-stack-navigator --prev



#alt - p : yabai -m window --focus stack.prev || yabai -m window --focus prev || yabai -m window --focus last



## Close active application
hyper - backspace : $(yabai -m window $(yabai -m query --windows --window | jq -re ".id") --close)

# test a command
# lshift - x : terminal-notifier -message "lshift - x"
#lshift - x : terminal-notifier -message "$(yabai -m query --windows --window | jq -re ".id")"

## send window to monitor and follow focus
hyper - u : /Users/jesseskelton/CustomScripts/SwitchSpaces/moveWindowLeftAndFollowFocus.sh
hyper - p : /Users/jesseskelton/CustomScripts/SwitchSpaces/moveWindowRightAndFollowFocus.sh

## increase window size

## flip the tree vertically
hyper - 4 : yabai -m space --mirror y-axis
# mirror tree y-axis
#alt - y : yabai -m space --mirror y-axis
## mirror tree x-axis
#alt - x : yabai -m space --mirror x-axis


# show next space per display
#hyper - 1 : /Users/jesseskelton/CustomScripts/SwitchSpaces/switchAndFocus.sh 1
#hyper - 2 : /Users/jesseskelton/CustomScripts/SwitchSpaces/switchAndFocus.sh 2
#hyper - 3 : /Users/jesseskelton/CustomScripts/SwitchSpaces/switchAndFocus.sh 3
ctrl + alt + cmd + lshift - 1 : /Users/jesseskelton/CustomScripts/SwitchSpaces/switchAndFocusSIP.sh 1
ctrl + alt + cmd + lshift - 2 : /Users/jesseskelton/CustomScripts/SwitchSpaces/switchAndFocusSIP.sh 2
ctrl + alt + cmd + lshift - 3 : /Users/jesseskelton/CustomScripts/SwitchSpaces/switchAndFocusSIP.sh 3

## toggle window fullscreen zoom
hyper - f : yabai -m window --toggle zoom-fullscreen

# cycle through windows
# cycle backwards
ctrl - 0x19 : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}
ctrl - 0x1D : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}

#
# go to each window WITHOUT going into a stack
# ctrl + alt + cmd + lshift - i : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -re "[.[] | select((.\"stack-index\" <= 1) and (.app != \"Hammerspoon\"))]" | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}
ctrl + alt + cmd + lshift - i : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -re "[.[] | select(.app != \"Hammerspoon\")]" | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}

# ctrl + alt + cmd + rshift - i : yabai -m window --focus stack.prev || yabai -m window --focus stack.last

#hyper - 0x29 : yabai -m query --spaces \
#hyper - o : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | reverse | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}


# go to each window WITHOUT going into a stack
# ctrl + alt + cmd + lshift - o : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -re "[.[] | select((.\"stack-index\" <= 1) and (.app != \"Hammerspoon\"))]" | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | reverse | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}
ctrl + alt + cmd + lshift - o : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -re "[.[] | select(.app != \"Hammerspoon\")]" | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | reverse | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}

# Toggle foucus on a stack
ctrl + alt + cmd + lshift - return : yabai -m window --focus stack.next || yabai -m window --focus stack.first


################################################################
############################# UNUSED ###########################
################################################################

## float / unfloat window and center on screen
#alt - t : yabai -m window --toggle float;\
#yabai -m window --grid 4:4:1:1:2:2 ## toggle sticky alt - s : yabai -m window --toggle sticky ## toggle sticky, float and resize to picture-in-picture size alt - p : yabai -m window --toggle sticky;\ yabai -m window --grid 5:5:4:0:1:1 ## change layout of desktop ctrl + alt - a : yabai -m space --layout bsp ctrl + alt - d : yabai -m space --layout float

## toggle window split type
#alt - e : yabai -m window --toggle split

## toggle window border
#shift + alt - b : yabai -m window --toggle border

## create desktop, move window and follow focus
#shift + cmd - n : yabai -m space --create && \
#index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
#yabai -m window --space "${index}" && \
#yabai -m space --focus "${index}"

## create desktop and follow focus
#shift + alt - n : yabai -m space --create && \
#index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
#yabai -m space --focus "${index}"

## destroy desktop
#cmd + alt - w : yabai -m space --destroy

## fast focus desktop
#cmd + alt - x : yabai -m space --focus last
#cmd + alt - z : yabai -m space --focus prev
#cmd + alt - c : yabai -m space --focus next
#cmd + alt - 1 : yabai -m space --focus 1
#cmd + alt - 2 : yabai -m space --focus 2
#cmd + alt - 3 : yabai -m space --focus 3
#cmd + alt - 4 : yabai -m space --focus 4
#cmd + alt - 5 : yabai -m space --focus 5
#cmd + alt - 6 : yabai -m space --focus 6
#cmd + alt - 7 : yabai -m space --focus 7
#cmd + alt - 8 : yabai -m space --focus 8
#cmd + alt - 9 : yabai -m space --focus 9
#cmd + alt - 0 : yabai -m space --focus 10

## move window
#shift + ctrl - a : yabai -m window --move rel:-20:0
#shift + ctrl - s : yabai -m window --move rel:0:20
#shift + ctrl - w : yabai -m window --move rel:0:-20
#shift + ctrl - d : yabai -m window --move rel:20:0

## Swap window
# hyper - y : yabai -m window --warp west
# shift + cmd - j : yabai -m window --warp south
# shift + cmd - k : yabai -m window --warp north
# hyper - 0x21 : yabai -m window --warp east # "[" key

## focus monitor
#ctrl + alt - x  : yabai -m display --focus last
#ctrl + alt - z  : yabai -m display --focus prev || yabai -m display --focus last
#ctrl + alt - c  : yabai -m display --focus next || yabai -m display --focus first
#ctrl + alt - 1  : yabai -m display --focus 1
#ctrl + alt - 2  : yabai -m display --focus 2
#ctrl + alt - 3  : yabai -m display --focus 3



